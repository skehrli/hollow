buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
  }
}

plugins {
  id 'com.netflix.nebula.netflixoss' version '11.6.0'
  id 'org.checkerframework' version '0.6.56' apply false
}

subprojects {
  apply plugin: 'nebula.netflixoss'
  
  repositories {
    mavenCentral()
    mavenLocal()
  }

  if (!project.hasProperty("noCF")) {
    apply plugin: 'org.checkerframework'

    if (project.hasProperty("cfLocal")) {
      def cfHome = String.valueOf(System.getenv("CHECKERFRAMEWORK"))
      dependencies {
        compileOnly files(cfHome + "/checker/dist/checker-qual.jar")
        testCompileOnly files(cfHome + "/checker/dist/checker-qual.jar")
        checkerFramework files(cfHome + "/checker/dist/checker.jar")
      }
    }

    checkerFramework {
      checkers = [
        'org.checkerframework.checker.resourceleak.ResourceLeakChecker'
      ]
    }
  }

  java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(8)
    }
  }

  tasks.withType(Javadoc) {
    options.tags(
        'apiNote:a:API Note:',
        'implSpec:a:Implementation Requirements:',
        'implNote:a:Implementation Note:')
  }

  group = 'com.netflix.hollow'
}

project(':hollow').afterEvaluate { subproject ->
    subproject.checkerFramework {
      // only check hollow-core
      extraJavacArgs.add("-AonlyFiles=.*/com/netflix/hollow/core/.*")
    }
}
